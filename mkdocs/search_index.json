{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to Utils Documentation\n\n\nIn this documentation you will find useful commands line for Git, MongoDB and more\n\n\nRequirements\n\n\n\n\nMAC OSX\n\n\nMongoDB\n\n\nGit\n\n\nPython\n\n\n\n\nNotes\n\n\n\n\nThis documentation has been generated with MKDOCS, \ntake a look", 
            "title": "Welcome"
        }, 
        {
            "location": "/#welcome-to-utils-documentation", 
            "text": "In this documentation you will find useful commands line for Git, MongoDB and more", 
            "title": "Welcome to Utils Documentation"
        }, 
        {
            "location": "/#requirements", 
            "text": "MAC OSX  MongoDB  Git  Python", 
            "title": "Requirements"
        }, 
        {
            "location": "/#notes", 
            "text": "This documentation has been generated with MKDOCS,  take a look", 
            "title": "Notes"
        }, 
        {
            "location": "/git/", 
            "text": "Git Utils\n\n\nHere you can find a basic walkthrough for the creation of a new repository\n\n\nGitHub\n\n\n\n\ngo to github.com and create an account\n\n\n\n\nNew Repository\n\n\n\n\nlog to your account on github\n\n\ncreate a repository\n\n\ncreate a new folder wherever you want into your computer\n\n\nnavigate to the folder root from your command line\n\n\nwrite the command: 'git init .'\n\n\ncreate a new file with vim command: 'vim .gitignore' // press 'i' and insert the file or folder you want to not track with git\n\n\nwrite the command: 'git remote add origin git@github.com:MyUsername/nameOfTheOnlineRepo.git'\n\n\nwrite the command: 'git add .' // to start tracking the files\n\n\nwrite the command: 'git commit -am \"initial-gitignore\"' // to archive your chagesets\n\n\nwrite the command: 'git push -u origin master' // to push your changesets to the online repository // '-u' to set the branch as default\n\n\n\n\nDownload Mate Changesets\n\n\n\n\nmove to your command line window and type: 'git pull'\n\n\n\n\nCheck Repository Status\n\n\n\n\nmove to your command line window and type: 'git status'\n\n\n\n\nList branch\n\n\n\n\nmove to your command line window and type: 'git branch'\n\n\n\n\nCreate and move to a new branch\n\n\n\n\nmove to your command line window and type: 'git checkout -b nameOfTheBranch'\n\n\n\n\nDelete file from repo\n\n\n\n\nmove to your command line window and type: 'git rm fileName' // git commit -m \"remove fileName\" (it will remove the file locally too)", 
            "title": "Git Utils"
        }, 
        {
            "location": "/git/#git-utils", 
            "text": "Here you can find a basic walkthrough for the creation of a new repository", 
            "title": "Git Utils"
        }, 
        {
            "location": "/git/#github", 
            "text": "go to github.com and create an account", 
            "title": "GitHub"
        }, 
        {
            "location": "/git/#new-repository", 
            "text": "log to your account on github  create a repository  create a new folder wherever you want into your computer  navigate to the folder root from your command line  write the command: 'git init .'  create a new file with vim command: 'vim .gitignore' // press 'i' and insert the file or folder you want to not track with git  write the command: 'git remote add origin git@github.com:MyUsername/nameOfTheOnlineRepo.git'  write the command: 'git add .' // to start tracking the files  write the command: 'git commit -am \"initial-gitignore\"' // to archive your chagesets  write the command: 'git push -u origin master' // to push your changesets to the online repository // '-u' to set the branch as default", 
            "title": "New Repository"
        }, 
        {
            "location": "/git/#download-mate-changesets", 
            "text": "move to your command line window and type: 'git pull'", 
            "title": "Download Mate Changesets"
        }, 
        {
            "location": "/git/#check-repository-status", 
            "text": "move to your command line window and type: 'git status'", 
            "title": "Check Repository Status"
        }, 
        {
            "location": "/git/#list-branch", 
            "text": "move to your command line window and type: 'git branch'", 
            "title": "List branch"
        }, 
        {
            "location": "/git/#create-and-move-to-a-new-branch", 
            "text": "move to your command line window and type: 'git checkout -b nameOfTheBranch'", 
            "title": "Create and move to a new branch"
        }, 
        {
            "location": "/git/#delete-file-from-repo", 
            "text": "move to your command line window and type: 'git rm fileName' // git commit -m \"remove fileName\" (it will remove the file locally too)", 
            "title": "Delete file from repo"
        }, 
        {
            "location": "/mongodb/", 
            "text": "Mongo DB Utils\n\n\nHere you can find a basic MongoDB commands line\n\n\nRun\n\n\n\n\nopen a new command line window\n\n\ntype: mongod\n\n\n\n\nCheck if is running\n\n\n\n\nopen a new command line window\n\n\nps -ax | grep mongo\n\n\n\n\nKill\n\n\n\n\nopen a new command line window\n\n\nps -ax | grep mongo\n\n\nuse 'kill PID' code that the previous command will print\n\n\n\n\nShell\n\n\n\n\nopen a new command line window\n\n\ntype: mongo\n\n\n\n\nDB List\n\n\n\n\nmove to your command line window with the mongo shell opened\n\n\ntype: show dbs\n\n\n\n\nUse/Create DB\n\n\n\n\nmove to your command line window with the mongo shell opened\n\n\ntype: use nameOfYourDB (if the DB doesn't exist mongo will move you to a new one, but it will not be totally created until you make an insert)\n\n\n\n\nCollections List\n\n\n\n\nmove to your command line window with the mongo shell opened\n\n\ntype: show collections\n\n\n\n\nCreate a new document/collection ('tables')\n\n\n\n\nmove to your command line window with the mongo shell opened\n\n\ntype: db.nameOfTheDocument.insert({\"key1\":\"value1\", \"key2\": \"value2\"})\n\n\n\n\nQuery all document entries\n\n\n\n\nmove to your command line window with the mongo shell opened\n\n\ntype: db.nameOfTheDocument.find().pretty()\n\n\n\n\nFiltered query\n\n\n\n\nmove to your command line window with the mongo shell opened\n\n\ntype: db.nameOfTheDocument.find({ \"key1\": \"value1\"})\n\n\n\n\nUpdate document\n\n\n\n\nmove to your command line window with the mongo shell opened\n\n\ntype: db.nameOfTheDocument.update({\"key1\": \"value1\"}, { $set: {\"key2\": \"value2\"}})\n\n\n\n\nDeleting a document\n\n\n\n\nmove to your command line window with the mongo shell opened\n\n\ntype: db.nameOfTheDocument.drop()\n\n\n\n\nDeleting multiple documents entries\n\n\n\n\nmove to your command line window with the mongo shell opened\n\n\ntype: db.nameOfTheDocument.remove({ \"key1\": \"value1\" })\n\n\n\n\nDeleting DB\n\n\n\n\nmove to your command line window with the mongo shell opened\n\n\nmake sure you are using the DB that you want to delete typing: use nameOfYourDB\n\n\ntype: db.dropDatabase()", 
            "title": "Mongo DB Utils"
        }, 
        {
            "location": "/mongodb/#mongo-db-utils", 
            "text": "Here you can find a basic MongoDB commands line", 
            "title": "Mongo DB Utils"
        }, 
        {
            "location": "/mongodb/#run", 
            "text": "open a new command line window  type: mongod", 
            "title": "Run"
        }, 
        {
            "location": "/mongodb/#check-if-is-running", 
            "text": "open a new command line window  ps -ax | grep mongo", 
            "title": "Check if is running"
        }, 
        {
            "location": "/mongodb/#kill", 
            "text": "open a new command line window  ps -ax | grep mongo  use 'kill PID' code that the previous command will print", 
            "title": "Kill"
        }, 
        {
            "location": "/mongodb/#shell", 
            "text": "open a new command line window  type: mongo", 
            "title": "Shell"
        }, 
        {
            "location": "/mongodb/#db-list", 
            "text": "move to your command line window with the mongo shell opened  type: show dbs", 
            "title": "DB List"
        }, 
        {
            "location": "/mongodb/#usecreate-db", 
            "text": "move to your command line window with the mongo shell opened  type: use nameOfYourDB (if the DB doesn't exist mongo will move you to a new one, but it will not be totally created until you make an insert)", 
            "title": "Use/Create DB"
        }, 
        {
            "location": "/mongodb/#collections-list", 
            "text": "move to your command line window with the mongo shell opened  type: show collections", 
            "title": "Collections List"
        }, 
        {
            "location": "/mongodb/#create-a-new-documentcollection-tables", 
            "text": "move to your command line window with the mongo shell opened  type: db.nameOfTheDocument.insert({\"key1\":\"value1\", \"key2\": \"value2\"})", 
            "title": "Create a new document/collection ('tables')"
        }, 
        {
            "location": "/mongodb/#query-all-document-entries", 
            "text": "move to your command line window with the mongo shell opened  type: db.nameOfTheDocument.find().pretty()", 
            "title": "Query all document entries"
        }, 
        {
            "location": "/mongodb/#filtered-query", 
            "text": "move to your command line window with the mongo shell opened  type: db.nameOfTheDocument.find({ \"key1\": \"value1\"})", 
            "title": "Filtered query"
        }, 
        {
            "location": "/mongodb/#update-document", 
            "text": "move to your command line window with the mongo shell opened  type: db.nameOfTheDocument.update({\"key1\": \"value1\"}, { $set: {\"key2\": \"value2\"}})", 
            "title": "Update document"
        }, 
        {
            "location": "/mongodb/#deleting-a-document", 
            "text": "move to your command line window with the mongo shell opened  type: db.nameOfTheDocument.drop()", 
            "title": "Deleting a document"
        }, 
        {
            "location": "/mongodb/#deleting-multiple-documents-entries", 
            "text": "move to your command line window with the mongo shell opened  type: db.nameOfTheDocument.remove({ \"key1\": \"value1\" })", 
            "title": "Deleting multiple documents entries"
        }, 
        {
            "location": "/mongodb/#deleting-db", 
            "text": "move to your command line window with the mongo shell opened  make sure you are using the DB that you want to delete typing: use nameOfYourDB  type: db.dropDatabase()", 
            "title": "Deleting DB"
        }, 
        {
            "location": "/python/", 
            "text": "Python Utils\n\n\nHere you can find a lot of python tips\n\n\nRun Simple Server\n\n\n\n\nmove to your command line window and type: 'python -m SimpleHTTPServer 8000'", 
            "title": "Python Utils"
        }, 
        {
            "location": "/python/#python-utils", 
            "text": "Here you can find a lot of python tips", 
            "title": "Python Utils"
        }, 
        {
            "location": "/python/#run-simple-server", 
            "text": "move to your command line window and type: 'python -m SimpleHTTPServer 8000'", 
            "title": "Run Simple Server"
        }
    ]
}